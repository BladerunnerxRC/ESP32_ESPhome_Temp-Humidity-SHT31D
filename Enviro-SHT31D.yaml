substitutions:
  temperature_calibration: "-3.0"
  humidity_calibration: "-1.0"
  update_interval_s: "30s"
  update_interval_wifi: "60s"

esphome:
  name: "environmental-a1"
  friendly_name: ENVIRO-A1

esp32:
  board: esp32dev
  framework:
    type: arduino
    version: recommended  # Options: recommended, dev, or latest
    
# Enable logging
logger:
  level: VERBOSE #ERROR VERY_VERBOSE VERBOSE INFO WARN 
  
# Enable Home Assistant API
api:
  encryption:
    key: !secret enviro1_api_key

ota:
  - platform: esphome
    password: !secret enviro1_ota_pwd

# Sync time with Home Assistant
time:
  - platform: homeassistant
    id: ha_time
i2c:
  id: bus_a
  sda: GPIO21  # Adjust according to your board
  scl: GPIO22
  scan: true
  frequency: 800kHz
  timeout: 10ms
  
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  output_power: 15.5dB
  manual_ip:
    static_ip: 10.100.50.16
    gateway:   10.100.50.1
    subnet:    255.255.255.0
    dns1:      8.8.8.8
    dns2:      8.8.4.4  
  on_connect:
    then:
      - switch.turn_on: onboard_led
  on_disconnect:
    then:
      - switch.turn_off: onboard_led
      - logger.log: "WiFi disconnected. Waiting 30 seconds before deciding to restart."
      - delay: 30s
      - if:
          condition:
            lambda: 'return !WiFi.isConnected();'
          then:
            - logger.log: "WiFi still disconnected after delay. Restarting now."
            - lambda: |-
                ESP.restart();
  ap:
    ssid: "Enviro-A1 Fallback Hotspot"
    password: !secret enviro1_ap_pwd

# captive_portal:

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: ${update_interval_wifi}
    device_class: signal_strength
    
  - platform: sht3xd
    i2c_id: bus_a  # Define the correct I2C bus if needed
    address: 0x44  # Default I2C address, may vary
    temperature:
        name: "SHT31_Temperature"
        id: temp
        filters:
          - lambda: return x + ${temperature_calibration};
    humidity:
        name: "SHT_31_Humidity"
        id: humidity
        filters:
          - lambda: return x + ${humidity_calibration};
    update_interval: ${update_interval_s}

binary_sensor:
  - platform: status
    name: "Connection Status"
    id: connection_status
    entity_category: diagnostic

# Define the onboard LED
switch:
  - platform: gpio
    name: "Wifi Connect LED Switch"
    pin: 2
    id: onboard_led
    inverted: false  # Adjust this if your LED logic is not inverted

    