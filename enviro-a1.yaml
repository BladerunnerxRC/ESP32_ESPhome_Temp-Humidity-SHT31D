# ESPhome configuration for the ENVIRO-A1 ESP32 board.
#
# Works with INFO ESPHome 2025.7.3 firmware for hardware:
#   - ESP32-D0WDQ6 (revision v1.0)
#   - Features: WiFi, BT, Dual Core, Coding Scheme None
#   - 40MHz crystal
#   - 4MB flash
#
# -------------------------------
# GPIO Pin Assignments Table
# -------------------------------
# | Function                | GPIO Pin | Notes                        |
# |-------------------------|----------|------------------------------|
# | I2C SDA                 | GPIO21   | Data line for I2C bus        |
# | I2C SCL                 | GPIO22   | Clock line for I2C bus       |
# | Onboard LED (WiFi LED)  | GPIO2    | Controls onboard status LED  |
# -------------------------------

substitutions:
  # Calibration offsets applied to the SHT31D readings
  temperature_calibration: "0.0"
  humidity_calibration: "0.0"
  # Measurement intervals
  update_interval_s: "30s"
  update_interval_wifi: "60s"

globals:
  - id: g_temperature_calibration
    type: float
    restore_value: true
    initial_value: "${temperature_calibration}"
  - id: g_humidity_calibration
    type: float
    restore_value: true
    initial_value: "${humidity_calibration}"
  - id: g_update_interval_s
    type: int
    restore_value: true
    initial_value: "30"
  - id: g_update_interval_wifi
    type: int
    restore_value: true
    initial_value: "60"

esphome:
  name: "enviro-a1"
  friendly_name: ENVIRO-A1
  on_boot:
    priority: -100
    then:
      - lambda: |-
          id(g_update_interval_s) = atoi("${update_interval_s}");
          id(g_update_interval_wifi) = atoi("${update_interval_wifi}");

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended # Options: recommended, dev, or latest

# Configure I2C bus for the SHT31D sensor
i2c:
  id: bus_a
  sda: 21
  scl: 22
  scan: true

# Enable detailed logging. UART output is disabled when baud_rate=0.
logger:
  level: DEBUG # Options: ERROR, WARN, INFO, DEBUG, VERY_VERBOSE
  baud_rate: 115200 # enable UART logging for debugging
  # baud_rate: 0 # disable UART logging

# Enable the Home Assistant API with encrypted communication
api:
  encryption:
    key: !secret enviro_a1_api_key

# Over-the-air update credentials
ota:
  - platform: esphome
    password: !secret enviro_a1_api_key

# Use Home Assistant as the time source
time:
  - platform: homeassistant
    id: ha_time

wifi:
  # Wi-Fi credentials
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: none
  output_power: 15.5dB
  # Static network configuration
  manual_ip:
    static_ip: 10.100.50.16
    gateway: 10.100.50.1
    subnet: 255.255.255.0
    dns1: 8.8.8.8
    dns2: 8.8.4.4

  # Turn on the LED when connected and log in the console
  on_connect:
    then:
      - switch.turn_on:
          id: onboard_led
      - logger.log: "WiFi connected"
      - homeassistant.service:
          service: persistent_notification.create
          data:
            title: "ENVIRO-A1"
            message: "WiFi connection established"

  # Handle disconnection: wait 30s, then only restart if still offline
  on_disconnect:
    then:
      - switch.turn_off:
          id: onboard_led
      - logger.log: "WiFi disconnected. Waiting 30 seconds before restart."
      - delay: 30s
      - if:
          condition:
            wifi.connected: {}       # use {} here
          then:
            - logger.log: "WiFi reconnected during delay, not restarting."
          else:
            - logger.log: "Still disconnected, restarting now."
            - switch.turn_on:
                id: reboot_enviro_a1_restart

  # Fallback access point settings for when Wi-Fi is not available
  ap:
    ssid: !secret enviro_a1_ap_sid
    password: !secret enviro_a1_ap_pwd

# captive_portal: # (Optional) Enable captive portal for fallback AP

sensor:
  # Report Wi-Fi signal strength
  - platform: wifi_signal
    name: "WiFi Signal"
    id: wifi_signal_sensor
    update_interval: ${update_interval_wifi}
    device_class: signal_strength

  # SHT31D temperature/humidity sensor (I2C)
  - platform: sht3xd
    i2c_id: bus_a # Use defined I2C bus
    address: 0x44 # Default I2C address for SHT31D
    temperature:
      name: "SHT31_Temperature" # Temperature sensor entity
      id: temp
      filters:
        - lambda: return x + id(g_temperature_calibration); # Apply calibration offset
    humidity:
      name: "Humidity" # Humidity sensor entity
      id: humidity
      filters:
        - lambda: return x + id(g_humidity_calibration); # Apply calibration offset
    update_interval: ${update_interval_s}

  # How long the device has been running
  - platform: uptime
    id: enviro_a1_uptime_sensor
    name: "ENVIRO-A1 Uptime"

binary_sensor:
  # Show if the device is online
  - platform: status
    name: "Connection Status"
    id: connection_status
    entity_category: diagnostic

  # Trigger a reboot from Home Assistant when the input_boolean is toggled
  - platform: homeassistant
    name: "Reboot ENVIRO-A1 Trigger"
    entity_id: input_boolean.reboot_enviro_a1
    id: reboot_trigger
    on_press:
      - if:
          # Prevent reboot during first 60 seconds of uptime (debounce)
          condition:
            lambda: 'return id(enviro_a1_uptime_sensor).state > 60;'
          then:
            - logger.log: "Manual reboot requested via Home Assistant (passes debounce)"
            # Turn off the HA boolean so it resets for next use
            - homeassistant.service:
                service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.reboot_enviro_a1
            - logger.log: "Device rebooting now"
            - switch.turn_on:
                id: reboot_enviro_a1_restart
          else:
            - logger.log: "Debounce blocked reboot: uptime too short"
            - homeassistant.service:
                service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.reboot_enviro_a1

switch:
  # Controls the onboard LED connected to GPIO2 (WiFi status indicator)
  - platform: gpio
    name: "Wifi Connect LED Switch"
    pin: 2
    id: onboard_led
    inverted: False # ESP32 DevKit onboard LED is active LOW

  # Exposes a restart switch to Home Assistant
  - platform: restart
    name: "Reboot_ENVIRO-A1"
    id: reboot_enviro_a1_restart

button:
  - platform: template
    name: "Refresh Sensors"
    id: refresh_sensors
    on_press:
      - component.update: temp
      - component.update: humidity
      - component.update: wifi_signal_sensor
      - component.update: enviro_a1_uptime_sensor

number:
  - platform: template
    name: "Temperature Calibration"
    id: temperature_calibration_number
    min_value: -10
    max_value: 10
    step: 0.1
    restore_value: true
    initial_value: ${temperature_calibration}
    set_action:
      - globals.set:
          id: g_temperature_calibration
          value: !lambda 'return x;'
      - button.press: refresh_sensors

  - platform: template
    name: "Humidity Calibration"
    id: humidity_calibration_number
    min_value: -10
    max_value: 10
    step: 0.1
    restore_value: true
    initial_value: ${humidity_calibration}
    set_action:
      - globals.set:
          id: g_humidity_calibration
          value: !lambda 'return x;'
      - button.press: refresh_sensors

  - platform: template
    name: "Update Interval (s)"
    id: update_interval_seconds_number
    min_value: 10
    max_value: 3600
    step: 1
    restore_value: true
    initial_value: 30
    set_action:
      - globals.set:
          id: g_update_interval_s
          value: !lambda 'return (int)x;'

  - platform: template
    name: "WiFi Update Interval (s)"
    id: update_interval_wifi_seconds_number
    min_value: 10
    max_value: 3600
    step: 1
    restore_value: true
    initial_value: 60
    set_action:
      - globals.set:
          id: g_update_interval_wifi
          value: !lambda 'return (int)x;'

